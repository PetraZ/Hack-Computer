function Asteroid.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push constant 1
neg
pop this 2
push argument 2
pop this 3
push pointer 0
return
function Asteroid.draw 0
push argument 0
pop pointer 0
push this 2
push this 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Asteroid.erase 1
pop temp 0
label IF_FALSE0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 3
call Screen.drawCircle 3
pop temp 0
push this 0
pop this 2
push constant 0
return
function Asteroid.erase 0
push argument 0
pop pointer 0
push this 2
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 2
push this 3
sub
push this 1
push this 3
sub
push this 2
push this 3
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0
push constant 1
neg
pop this 2
push constant 0
return
function Asteroid.outOfLeftBounds 1
push argument 0
pop pointer 0
push this 0
push this 3
sub
push constant 0
lt
pop local 0
push local 0
return
function Asteroid.outOfRightBounds 1
push argument 0
pop pointer 0
push this 0
push this 3
add
call Constants.SCREEN_WIDTH 0
gt
pop local 0
push local 0
return
function Asteroid.move 0
push argument 0
pop pointer 0
push this 0
push argument 1
add
pop this 0
push constant 0
return
function Asteroid.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Asteroid.getX 0
push argument 0
pop pointer 0
push this 0
return
function Asteroid.setX 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push constant 0
return
function Asteroid.getY 0
push argument 0
pop pointer 0
push this 1
return
function Asteroid.setY 0
push argument 0
pop pointer 0
push argument 1
pop this 1
push constant 0
return
function Asteroid.setRadius 0
push argument 0
pop pointer 0
push argument 1
pop this 3
push constant 0
return
function Asteroid.getBoundingRect 0
push argument 0
pop pointer 0
push this 0
push this 3
sub
push constant 2
add
push this 1
push this 3
sub
push constant 2
add
push this 3
push constant 2
call Math.multiply 2
push constant 4
sub
push this 3
push constant 2
call Math.multiply 2
push constant 4
sub
call Rect.new 4
return
